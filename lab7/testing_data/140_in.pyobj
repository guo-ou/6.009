'(((M * (((N - h) / (((-6 * J) - 4) / (((l + (J / f)) / ((u * h) - (8 / t))) / E))) / (R + ((((-9 * (4 - 3)) * ((A / i) / (3 - 0))) - (((Q / -6) / (n / m)) / ((F / E) - -2))) - ((((U / 1) + d) + ((F / 4) / (-9 - 5))) + q))))) * (s * (((L * (o / (((v * l) / X) / (n / (d + 5))))) + (r + ((((5 / D) + M) * ((S + U) + (-2 + 6))) / (6 + ((0 + -10) - (K / -10)))))) - ((P * (-6 - (4 - (-10 + 10)))) * (((((v * -2) / 9) * r) - (((-3 / 6) - -6) * ((i * i) * (J / 3)))) + ((((S * -9) * V) - ((g - l) + l)) * (4 + ((M + 8) - (-9 + 9))))))))) / ((-7 / (q * ((0 / ((V + ((Q + t) - (E / L))) * (((5 + -7) * B) + ((Q * 6) + (-1 - 6))))) + (((((n + -1) + (L / -10)) / ((g / c) + 7)) + (1 + 10)) * r)))) - (R * (((((((s + a) / (6 + -3)) / P) * (((-6 * B) * q) - ((b * T) * 5))) / 2) / ((-1 / r) + ((((3 + x) - (B + -6)) * ((1 / -2) / (y * j))) / (((-5 * -9) + 7) + (Q * (b - 9)))))) * (6 - ((((e / (-4 + -7)) / (S - v)) - (((O + -9) * (c * S)) * ((-2 / 5) + (0 / -9)))) + (((A * (k + L)) - ((E + T) / (-5 * A))) / -5)))))))'